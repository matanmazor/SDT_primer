geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(markdown)
library(cowplot)
red <- "#E41A1C"
blue <- "#377EB8"
dnorm_segment <- function(x, mean = 0, sd = 1, c=1, factor1 = 1, factor2 = 1)
dnorm(x, mean = mean, sd = sd)*ifelse(x<=c, factor1, factor2)
ui <- fluidPage(
fluidRow(
column(9, offset = 3,
includeMarkdown("intro.md")
)
),
fluidRow(
column(3,
sliderInput("meanSignal","signal mean (d')",-3,3,1,0.1),
# sliderInput("varSignal","signal variance",0.5,2,1,0.1),
sliderInput("c","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("scale","confidence scale",0,2,0.5,0.05)
),
column(6,plotOutput("plot1")),
column(3,plotOutput("ROCplot"))
),
hr(),
fluidRow(
column(9, offset = 3,
includeMarkdown(rmarkdown::render("meta.md"))
)
),
fluidRow(
column(3,
sliderInput("dprime","signal mean (d')",-3,3,1,0.1),
sliderInput("criterion","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("metascale","confidence scale",0,2,0.5,0.05),
sliderInput("metad", "meta d'",-3,3,1,0.1),
sliderInput("metac","meta criterion",-3,3,0.5,0.1)
),
column(6, plotOutput("plot2")),
column(3, plotOutput("ROCplot2"))
),
hr(),
)
server <- function(input, output) {
c_vec <- reactive({input$scale*seq(-5,5)+input$c})
sample1 <- reactive({data.frame(condition = rep(c("noise","signal"),each=12),
response = factor(rep(c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6"),2),
levels = c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6")),
count=c(hist(rnorm(600), breaks = c(-10,c_vec(),10))$counts,
hist(rnorm(600,input$meanSignal), breaks = c(-10,c_vec(),10))$counts))})
metac_vec <- reactive({input$metascale*seq(-5,5)+input$metac})
hit_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = FALSE)/
pnorm(input$metac, input$metad, lower.tail = FALSE)})
miss_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = TRUE)/
pnorm(input$metac, input$metad, lower.tail = TRUE)})
FA_factor <- reactive({
pnorm(input$criterion, lower.tail = FALSE)/
pnorm(input$metac, lower.tail = FALSE)})
CR_factor <- reactive({
pnorm(input$criterion, lower.tail = TRUE)/
pnorm(input$metac, lower.tail = TRUE)})
sample2 <-reactive({data.frame(condition = sample1()$condition,
response = sample1()$response,
count=c(hist(rnorm(600), breaks = c(-10,metac_vec(),10))$counts*
rep(c(CR_factor(), FA_factor()),each=6),
hist(rnorm(600,input$metad), breaks = c(-10,metac_vec(),10))$counts*
rep(c(miss_factor(), hit_factor()),each=6)))})
cumResps <- reactive({data.frame(F=c(0,pnorm(c_vec(),0,1, lower.tail=FALSE),1),
H = c(0,pnorm(c_vec(),input$meanSignal,lower.tail=FALSE),1))})
metacumResps <- reactive({data.frame(F=c(0,1-CR_factor()*pnorm(metac_vec()[seq(1,6)],0),
FA_factor()*pnorm(metac_vec()[seq(7,12)],0,lower.tail = FALSE),1),
H = c(0,1-miss_factor()*pnorm(metac_vec()[seq(1,6)],input$metad),
hit_factor()*pnorm(metac_vec()[seq(7,12)],input$metad,lower.tail=FALSE),1))})
output$plot1 <- renderPlot({
dist_plot1 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = input$meanSignal), xlim= c(-5,5),
color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),color = red ,geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = c_vec(),alpha=0.5) +geom_vline(xintercept = input$c,size=0.8) +
ylim(0,0.5) + xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample_plot1 <-  ggplot(data=sample1(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist_plot1,sample_plot1, nrow=2)
})
output$ROCplot <- renderPlot({ggplot(data=cumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title=paste("ROC curve | FA rate:", round(pnorm(input$c, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$c, input$meanSignal, lower.tail = FALSE),2)),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$c, lower.tail = FALSE ),
y=pnorm(input$c,input$meanSignal, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
output$plot2 <- renderPlot({
dist2 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, mean = input$metad, factor1 = miss_factor(), factor2 = hit_factor()), xlim= c(-5,5),
n=1000, color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, factor1 = CR_factor(), factor2 = FA_factor()), xlim= c(-5,5),
n=1000,color = red, geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = metac_vec(),alpha=0.5) +geom_vline(xintercept = input$metac,size=0.8) +
xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample2 <- ggplot(data=sample2(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist2, sample2, nrow=2)
})
# output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
#     geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title="ROC curve",
#                                                              x = "False Alarms", y="Hits")+
#     geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
#                    y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
#     geom_abline(slope=1,linetype='dotted') + theme_bw() + coord_cartesian(xlim =c(0, 1), ylim = c(0, 1))+
#     geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) +  labs(title=paste("ROC curve | FA rate:", round(pnorm(input$criterion, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$criterion, input$dprime, lower.tail = FALSE),2),
"\nM ratio: ", round(input$metad/input$dprime),2),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
}
shinyApp(ui, server)
shiny::runApp()
library(shiny)
library(ggplot2)
library(markdown)
library(cowplot)
red <- "#E41A1C"
blue <- "#377EB8"
dnorm_segment <- function(x, mean = 0, sd = 1, c=1, factor1 = 1, factor2 = 1)
dnorm(x, mean = mean, sd = sd)*ifelse(x<=c, factor1, factor2)
ui <- fluidPage(
fluidRow(
column(9, offset = 3,
includeMarkdown("intro.md")
)
),
fluidRow(
column(3,
sliderInput("meanSignal","signal mean (d')",-3,3,1,0.1),
# sliderInput("varSignal","signal variance",0.5,2,1,0.1),
sliderInput("c","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("scale","confidence scale",0,2,0.5,0.05)
),
column(6,plotOutput("plot1")),
column(3,plotOutput("ROCplot"))
),
hr(),
fluidRow(
column(9, offset = 3,
includeMarkdown(rmarkdown::render("meta.md"))
)
),
fluidRow(
column(3,
sliderInput("dprime","signal mean (d')",-3,3,1,0.1),
sliderInput("criterion","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("metascale","confidence scale",0,2,0.5,0.05),
sliderInput("metad", "meta d'",-3,3,1,0.1),
sliderInput("metac","meta criterion",-3,3,0.5,0.1)
),
column(6, plotOutput("plot2")),
column(3, plotOutput("ROCplot2"))
),
hr(),
)
server <- function(input, output) {
c_vec <- reactive({input$scale*seq(-5,5)+input$c})
sample1 <- reactive({data.frame(condition = rep(c("noise","signal"),each=12),
response = factor(rep(c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6"),2),
levels = c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6")),
count=c(hist(rnorm(600), breaks = c(-10,c_vec(),10))$counts,
hist(rnorm(600,input$meanSignal), breaks = c(-10,c_vec(),10))$counts))})
metac_vec <- reactive({input$metascale*seq(-5,5)+input$metac})
hit_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = FALSE)/
pnorm(input$metac, input$metad, lower.tail = FALSE)})
miss_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = TRUE)/
pnorm(input$metac, input$metad, lower.tail = TRUE)})
FA_factor <- reactive({
pnorm(input$criterion, lower.tail = FALSE)/
pnorm(input$metac, lower.tail = FALSE)})
CR_factor <- reactive({
pnorm(input$criterion, lower.tail = TRUE)/
pnorm(input$metac, lower.tail = TRUE)})
sample2 <-reactive({data.frame(condition = sample1()$condition,
response = sample1()$response,
count=c(hist(rnorm(600), breaks = c(-10,metac_vec(),10))$counts*
rep(c(CR_factor(), FA_factor()),each=6),
hist(rnorm(600,input$metad), breaks = c(-10,metac_vec(),10))$counts*
rep(c(miss_factor(), hit_factor()),each=6)))})
cumResps <- reactive({data.frame(F=c(0,pnorm(c_vec(),0,1, lower.tail=FALSE),1),
H = c(0,pnorm(c_vec(),input$meanSignal,lower.tail=FALSE),1))})
metacumResps <- reactive({data.frame(F=c(0,1-CR_factor()*pnorm(metac_vec()[seq(1,6)],0),
FA_factor()*pnorm(metac_vec()[seq(7,12)],0,lower.tail = FALSE),1),
H = c(0,1-miss_factor()*pnorm(metac_vec()[seq(1,6)],input$metad),
hit_factor()*pnorm(metac_vec()[seq(7,12)],input$metad,lower.tail=FALSE),1))})
output$plot1 <- renderPlot({
dist_plot1 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = input$meanSignal), xlim= c(-5,5),
color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),color = red ,geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = c_vec(),alpha=0.5) +geom_vline(xintercept = input$c,size=0.8) +
ylim(0,0.5) + xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample_plot1 <-  ggplot(data=sample1(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist_plot1,sample_plot1, nrow=2)
})
output$ROCplot <- renderPlot({ggplot(data=cumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title=paste("ROC curve | FA rate:", round(pnorm(input$c, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$c, input$meanSignal, lower.tail = FALSE),2)),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$c, lower.tail = FALSE ),
y=pnorm(input$c,input$meanSignal, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
output$plot2 <- renderPlot({
dist2 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, mean = input$metad, factor1 = miss_factor(), factor2 = hit_factor()), xlim= c(-5,5),
n=1000, color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, factor1 = CR_factor(), factor2 = FA_factor()), xlim= c(-5,5),
n=1000,color = red, geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = metac_vec(),alpha=0.5) +geom_vline(xintercept = input$metac,size=0.8) +
xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample2 <- ggplot(data=sample2(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist2, sample2, nrow=2)
})
# output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
#     geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title="ROC curve",
#                                                              x = "False Alarms", y="Hits")+
#     geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
#                    y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
#     geom_abline(slope=1,linetype='dotted') + theme_bw() + coord_cartesian(xlim =c(0, 1), ylim = c(0, 1))+
#     geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) +  labs(title=paste("ROC curve | FA rate:", round(pnorm(input$criterion, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$criterion, input$dprime, lower.tail = FALSE),2),
"\nM ratio: ", round(input$metad/input$dprime),2),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
}
shinyApp(ui, server)
runApp()
library(shiny)
library(ggplot2)
library(markdown)
library(cowplot)
red <- "#E41A1C"
blue <- "#377EB8"
dnorm_segment <- function(x, mean = 0, sd = 1, c=1, factor1 = 1, factor2 = 1)
dnorm(x, mean = mean, sd = sd)*ifelse(x<=c, factor1, factor2)
ui <- fluidPage(
fluidRow(
column(9, offset = 3,
includeMarkdown("intro.md")
)
),
fluidRow(
column(3,
sliderInput("meanSignal","signal mean (d')",-3,3,1,0.1),
# sliderInput("varSignal","signal variance",0.5,2,1,0.1),
sliderInput("c","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("scale","confidence scale",0,2,0.5,0.05)
),
column(6,plotOutput("plot1")),
column(3,plotOutput("ROCplot"))
),
hr(),
fluidRow(
column(9, offset = 3,
includeMarkdown(rmarkdown::render("meta.md"))
)
),
fluidRow(
column(3,
sliderInput("dprime","signal mean (d')",-3,3,1,0.1),
sliderInput("criterion","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("metascale","confidence scale",0,2,0.5,0.05),
sliderInput("metad", "meta d'",-3,3,1,0.1),
sliderInput("metac","meta criterion",-3,3,0.5,0.1)
),
column(6, plotOutput("plot2")),
column(3, plotOutput("ROCplot2"))
),
hr(),
)
server <- function(input, output) {
c_vec <- reactive({input$scale*seq(-5,5)+input$c})
sample1 <- reactive({data.frame(condition = rep(c("noise","signal"),each=12),
response = factor(rep(c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6"),2),
levels = c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6")),
count=c(hist(rnorm(600), breaks = c(-10,c_vec(),10))$counts,
hist(rnorm(600,input$meanSignal), breaks = c(-10,c_vec(),10))$counts))})
metac_vec <- reactive({input$metascale*seq(-5,5)+input$metac})
hit_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = FALSE)/
pnorm(input$metac, input$metad, lower.tail = FALSE)})
miss_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = TRUE)/
pnorm(input$metac, input$metad, lower.tail = TRUE)})
FA_factor <- reactive({
pnorm(input$criterion, lower.tail = FALSE)/
pnorm(input$metac, lower.tail = FALSE)})
CR_factor <- reactive({
pnorm(input$criterion, lower.tail = TRUE)/
pnorm(input$metac, lower.tail = TRUE)})
sample2 <-reactive({data.frame(condition = sample1()$condition,
response = sample1()$response,
count=c(hist(rnorm(600), breaks = c(-10,metac_vec(),10))$counts*
rep(c(CR_factor(), FA_factor()),each=6),
hist(rnorm(600,input$metad), breaks = c(-10,metac_vec(),10))$counts*
rep(c(miss_factor(), hit_factor()),each=6)))})
cumResps <- reactive({data.frame(F=c(0,pnorm(c_vec(),0,1, lower.tail=FALSE),1),
H = c(0,pnorm(c_vec(),input$meanSignal,lower.tail=FALSE),1))})
metacumResps <- reactive({data.frame(F=c(0,1-CR_factor()*pnorm(metac_vec()[seq(1,6)],0),
FA_factor()*pnorm(metac_vec()[seq(7,12)],0,lower.tail = FALSE),1),
H = c(0,1-miss_factor()*pnorm(metac_vec()[seq(1,6)],input$metad),
hit_factor()*pnorm(metac_vec()[seq(7,12)],input$metad,lower.tail=FALSE),1))})
output$plot1 <- renderPlot({
dist_plot1 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = input$meanSignal), xlim= c(-5,5),
color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),color = red ,geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = c_vec(),alpha=0.5) +geom_vline(xintercept = input$c,size=0.8) +
ylim(0,0.5) + xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample_plot1 <-  ggplot(data=sample1(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist_plot1,sample_plot1, nrow=2)
})
output$ROCplot <- renderPlot({ggplot(data=cumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title=paste("ROC curve | FA rate:", round(pnorm(input$c, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$c, input$meanSignal, lower.tail = FALSE),2)),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$c, lower.tail = FALSE ),
y=pnorm(input$c,input$meanSignal, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
output$plot2 <- renderPlot({
dist2 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, mean = input$metad, factor1 = miss_factor(), factor2 = hit_factor()), xlim= c(-5,5),
n=1000, color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, factor1 = CR_factor(), factor2 = FA_factor()), xlim= c(-5,5),
n=1000,color = red, geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = metac_vec(),alpha=0.5) +geom_vline(xintercept = input$metac,size=0.8) +
xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample2 <- ggplot(data=sample2(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist2, sample2, nrow=2)
})
# output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
#     geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title="ROC curve",
#                                                              x = "False Alarms", y="Hits")+
#     geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
#                    y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
#     geom_abline(slope=1,linetype='dotted') + theme_bw() + coord_cartesian(xlim =c(0, 1), ylim = c(0, 1))+
#     geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) +  labs(title=paste("ROC curve | FA rate:", round(pnorm(input$criterion, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$criterion, input$dprime, lower.tail = FALSE),2),
"\nM ratio: ", round(input$metad/input$dprime),2),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
}
shinyApp(ui, server)
runApp()
library(shiny)
library(ggplot2)
library(markdown)
library(cowplot)
red <- "#E41A1C"
blue <- "#377EB8"
dnorm_segment <- function(x, mean = 0, sd = 1, c=1, factor1 = 1, factor2 = 1)
dnorm(x, mean = mean, sd = sd)*ifelse(x<=c, factor1, factor2)
ui <- fluidPage(
fluidRow(
column(9, offset = 3,
includeMarkdown("intro.md")
)
),
fluidRow(
column(3,
sliderInput("meanSignal","signal mean (d')",-3,3,1,0.1),
# sliderInput("varSignal","signal variance",0.5,2,1,0.1),
sliderInput("c","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("scale","confidence scale",0,2,0.5,0.05)
),
column(6,plotOutput("plot1")),
column(3,plotOutput("ROCplot"))
),
hr(),
fluidRow(
column(9, offset = 3,
includeMarkdown(rmarkdown::render("meta.md"))
)
),
fluidRow(
column(3,
sliderInput("dprime","signal mean (d')",-3,3,1,0.1),
sliderInput("criterion","decision criterion (c)",-3,3,0.5,0.1),
sliderInput("metascale","confidence scale",0,2,0.5,0.05),
sliderInput("metad", "meta d'",-3,3,1,0.1),
sliderInput("metac","meta criterion",-3,3,0.5,0.1)
),
column(6, plotOutput("plot2")),
column(3, plotOutput("ROCplot2"))
),
hr(),
)
server <- function(input, output) {
c_vec <- reactive({input$scale*seq(-5,5)+input$c})
sample1 <- reactive({data.frame(condition = rep(c("noise","signal"),each=12),
response = factor(rep(c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6"),2),
levels = c("no,6","no,5","no,4","no,3","no,2","no,1","yes,1","yes,2","yes,3","yes,4","yes,5","yes,6")),
count=c(hist(rnorm(600), breaks = c(-10,c_vec(),10))$counts,
hist(rnorm(600,input$meanSignal), breaks = c(-10,c_vec(),10))$counts))})
metac_vec <- reactive({input$metascale*seq(-5,5)+input$metac})
hit_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = FALSE)/
pnorm(input$metac, input$metad, lower.tail = FALSE)})
miss_factor <- reactive({
pnorm(input$criterion, input$dprime, lower.tail = TRUE)/
pnorm(input$metac, input$metad, lower.tail = TRUE)})
FA_factor <- reactive({
pnorm(input$criterion, lower.tail = FALSE)/
pnorm(input$metac, lower.tail = FALSE)})
CR_factor <- reactive({
pnorm(input$criterion, lower.tail = TRUE)/
pnorm(input$metac, lower.tail = TRUE)})
sample2 <-reactive({data.frame(condition = sample1()$condition,
response = sample1()$response,
count=c(hist(rnorm(600), breaks = c(-10,metac_vec(),10))$counts*
rep(c(CR_factor(), FA_factor()),each=6),
hist(rnorm(600,input$metad), breaks = c(-10,metac_vec(),10))$counts*
rep(c(miss_factor(), hit_factor()),each=6)))})
cumResps <- reactive({data.frame(F=c(0,pnorm(c_vec(),0,1, lower.tail=FALSE),1),
H = c(0,pnorm(c_vec(),input$meanSignal,lower.tail=FALSE),1))})
metacumResps <- reactive({data.frame(F=c(0,1-CR_factor()*pnorm(metac_vec()[seq(1,6)],0),
FA_factor()*pnorm(metac_vec()[seq(7,12)],0,lower.tail = FALSE),1),
H = c(0,1-miss_factor()*pnorm(metac_vec()[seq(1,6)],input$metad),
hit_factor()*pnorm(metac_vec()[seq(7,12)],input$metad,lower.tail=FALSE),1))})
output$plot1 <- renderPlot({
dist_plot1 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = input$meanSignal), xlim= c(-5,5),
color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),color = red ,geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = c_vec(),alpha=0.5) +geom_vline(xintercept = input$c,size=0.8) +
ylim(0,0.5) + xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample_plot1 <-  ggplot(data=sample1(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist_plot1,sample_plot1, nrow=2)
})
output$ROCplot <- renderPlot({ggplot(data=cumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title=paste("ROC curve | FA rate:", round(pnorm(input$c, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$c, input$meanSignal, lower.tail = FALSE),2)),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$c, lower.tail = FALSE ),
y=pnorm(input$c,input$meanSignal, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
output$plot2 <- renderPlot({
dist2 <- ggplot(data.frame(x=c(0, 2)), aes(x)) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, mean = input$metad, factor1 = miss_factor(), factor2 = hit_factor()), xlim= c(-5,5),
n=1000, color = blue, geom = "area", fill = blue, size = 1, alpha = 0.5) +
stat_function(fun = dnorm_segment, args = list(c = input$metac, factor1 = CR_factor(), factor2 = FA_factor()), xlim= c(-5,5),
n=1000,color = red, geom = "area", fill = red, size = 1, alpha = 0.5) +
geom_vline(xintercept = metac_vec(),alpha=0.5) +geom_vline(xintercept = input$metac,size=0.8) +
xlim(-5,5) + labs(x="Strength of Evidence", y = "Density") + theme_void()
sample2 <- ggplot(data=sample2(),aes(x=response,y=count,fill=condition))+geom_bar(stat="identity",color="black",position=position_dodge())+
scale_fill_manual(values=c(red,blue))+theme(legend.position="none")
plot_grid(dist2, sample2, nrow=2)
})
# output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
#     geom_line() + geom_point() + coord_fixed(ratio=1) + labs(title="ROC curve",
#                                                              x = "False Alarms", y="Hits")+
#     geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
#                    y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
#     geom_abline(slope=1,linetype='dotted') + theme_bw() + coord_cartesian(xlim =c(0, 1), ylim = c(0, 1))+
#     geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
output$ROCplot2 <- renderPlot({ggplot(data=metacumResps(), aes(x=F,y=H,group=1))+
geom_line() + geom_point() + coord_fixed(ratio=1) +  labs(title=paste("ROC curve | FA rate:", round(pnorm(input$criterion, lower.tail = FALSE),2),
"| hit rate: ", round(pnorm(input$criterion, input$dprime, lower.tail = FALSE),2),
"\nM ratio: ", round(input$metad/input$dprime),2),
x = "False Alarms", y="Hits")+
geom_point(aes(x=pnorm(input$criterion, lower.tail = FALSE ),
y=pnorm(input$criterion,input$dprime, lower.tail = FALSE)),size=5) +
geom_abline(slope=1,linetype='dotted') + theme_bw() +
geom_rect(data=cumResps(), mapping=aes(xmin=0, xmax=1, ymin=0, ymax=1), color="black", alpha=0.5, fill = NA)
})
}
shinyApp(ui, server)
